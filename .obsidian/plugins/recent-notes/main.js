/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var v=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var V=Object.prototype.hasOwnProperty;var k=(r,a)=>{for(var e in a)v(r,e,{get:a[e],enumerable:!0})},L=(r,a,e,t)=>{if(a&&typeof a=="object"||typeof a=="function")for(let s of R(a))!V.call(r,s)&&s!==e&&v(r,s,{get:()=>a[s],enumerable:!(t=N(a,s))||t.enumerable});return r};var M=r=>L(v({},"__esModule",{value:!0}),r);var F={};k(F,{default:()=>w});module.exports=M(F);var o=require("obsidian"),c=require("obsidian"),Y={maxNotesToShow:100},g="recent-notes-view",y=class extends o.ItemView{constructor(e,t){super(e);this.refreshTimeout=null;this.debouncedRefresh=()=>{this.refreshTimeout&&clearTimeout(this.refreshTimeout),this.refreshTimeout=setTimeout(()=>{this.refreshView(),this.refreshTimeout=null},100)};this.plugin=t,this.containerEl.addClass("recent-notes-view")}getViewType(){return g}getDisplayText(){return"Recent notes"}getIcon(){return"clock-10"}async getFirstLineOfFile(e){var i,f,h;let s=(await this.app.vault.cachedRead(e)).split(`
`),l=0;if(((i=s[0])==null?void 0:i.trim())==="---"){for(let n=1;n<s.length;n++)if(((f=s[n])==null?void 0:f.trim())==="---"){l=n+1;break}}for(let n=l;n<s.length;n++){let d=(h=s[n])==null?void 0:h.trim();if(d&&d!=="---")return d.replace(/^#\s*/,"")}return"No additional text"}getTimeSection(e){let t=(0,c.moment)();return e.isSame(t,"day")?"Today":e.isSame(t.subtract(1,"day"),"day")?"Yesterday":e.isAfter(t.subtract(7,"days"))?"Previous 7 days":e.isAfter(t.subtract(30,"days"))?"Previous 30 days":e.isSame(t,"year")?e.format("MMMM"):e.format("YYYY")}async refreshView(){let e=this.containerEl.children[1];e.empty();let t=this.app.vault.getFiles().filter(i=>i.extension==="md").sort((i,f)=>f.stat.mtime-i.stat.mtime).slice(0,this.plugin.settings.maxNotesToShow),s="",l=this.app.workspace.getActiveFile();for(let i of t){let f=(0,c.moment)(i.stat.mtime),h=this.getTimeSection(f);h!==s&&(s=h,e.createEl("h6",{text:h}));let n=e.createEl("div",{cls:`recent-note-item ${l&&l.path===i.path?"is-active":""}`}),d=n.createEl("div",{text:i.basename,cls:"recent-note-title"}),E=n.createEl("div",{cls:"recent-note-info"}),S=(0,c.moment)(),p;h==="Today"?p=(0,c.moment)(i.stat.mtime).format("HH:mm"):h==="Yesterday"?p=(0,c.moment)(i.stat.mtime).format("HH:mm"):(0,c.moment)(i.stat.mtime).isAfter(S.subtract(7,"days"))?p=(0,c.moment)(i.stat.mtime).format("dddd"):p=(0,c.moment)(i.stat.mtime).format("DD/MM/YYYY"),E.createEl("span",{text:p,cls:"recent-note-date"});let x=await this.getFirstLineOfFile(i);E.createEl("span",{text:x,cls:"recent-note-preview"}),n.addEventListener("click",m=>{this.app.workspace.getLeaf(m.metaKey||m.ctrlKey).openFile(i)}),n.addEventListener("contextmenu",m=>{m.preventDefault();let u=new o.Menu;u.addItem(b=>{b.setIcon("trash").setTitle("Delete").onClick(async()=>{await this.app.vault.adapter.exists(i.path)&&(await this.app.vault.trash(i,!0),this.refreshView())})}),u.addSeparator(),this.app.workspace.trigger("file-menu",u,i,"recent-notes-view",null),u.showAtPosition({x:m.clientX,y:m.clientY})})}}async onOpen(){await this.refreshView(),this.registerEvent(this.app.vault.on("modify",this.debouncedRefresh)),this.registerEvent(this.app.vault.on("create",this.debouncedRefresh)),this.registerEvent(this.app.vault.on("delete",this.debouncedRefresh)),this.registerEvent(this.app.vault.on("rename",this.debouncedRefresh)),this.registerEvent(this.app.workspace.on("active-leaf-change",this.debouncedRefresh)),this.registerEvent(this.app.workspace.on("file-open",this.debouncedRefresh))}async onClose(){this.refreshTimeout&&clearTimeout(this.refreshTimeout)}},w=class extends o.Plugin{async onload(){await this.loadSettings(),this.registerView(g,e=>this.view=new y(e,this)),this.addRibbonIcon("clock-10","Recent notes",()=>{this.activateView()}),this.addCommand({id:"show-recent-notes",name:"Open",callback:()=>{this.activateView()}}),this.addSettingTab(new T(this.app,this))}async activateView(){let{workspace:e}=this.app,t=e.getLeavesOfType(g)[0];t||(t=e.getRightLeaf(!1),t&&await t.setViewState({type:g,active:!0})),t&&e.revealLeaf(t)}async loadSettings(){this.settings=Object.assign({},Y,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},T=class extends o.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new o.Setting(e).setName("Maximum notes to show").setDesc("How many recent notes to display in the view").addText(t=>t.setPlaceholder("100").setValue(this.plugin.settings.maxNotesToShow.toString()).onChange(async s=>{let l=parseInt(s);isNaN(l)||(this.plugin.settings.maxNotesToShow=l,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView())}))}};

/* nosourcemap */