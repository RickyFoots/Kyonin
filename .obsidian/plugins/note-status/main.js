/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var V=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var q=Object.prototype.hasOwnProperty;var Q=(h,e)=>{for(var t in e)V(h,t,{get:e[t],enumerable:!0})},K=(h,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of W(e))!q.call(h,i)&&i!==t&&V(h,i,{get:()=>e[i],enumerable:!(s=_(e,i))||s.enumerable});return h};var X=h=>K(V({},"__esModule",{value:!0}),h);var Y={};Q(Y,{default:()=>H});module.exports=X(Y);var l=require("obsidian");var R={statusPane:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path fill="currentColor" d="M3 3h18v18H3V3zm2 2v14h14V5H5zm2 2h10v2H7V7zm0 4h10v2H7v-2zm0 4h10v2H7v-2z"/>
  </svg>`,search:`<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" 
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="search-icon">
      <circle cx="11" cy="11" r="8"></circle>
      <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
  </svg>`,clear:`<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <line x1="18" y1="6" x2="6" y2="18"></line>
      <line x1="6" y1="6" x2="18" y2="18"></line>
  </svg>`,standardView:'<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="8" y1="6" x2="21" y2="6"></line><line x1="8" y1="12" x2="21" y2="12"></line><line x1="8" y1="18" x2="21" y2="18"></line><line x1="3" y1="6" x2="3.01" y2="6"></line><line x1="3" y1="12" x2="3.01" y2="12"></line><line x1="3" y1="18" x2="3.01" y2="18"></line></svg>',compactView:'<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="3" x2="9" y2="21"></line></svg>',refresh:'<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21.5 2v6h-6M21.34 15.57a10 10 0 1 1-.57-8.38"/></svg>',collapseDown:'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m6 9 6 6 6-6"/></svg>',collapseRight:'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m9 18 6-6-6-6"/></svg>',file:'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"></path><polyline points="14 2 14 8 20 8"></polyline></svg>'};var f=[{id:"colorful",name:"Colorful workflow",description:"A colorful set of workflow statuses with descriptive icons",statuses:[{name:"idea",icon:"\u{1F4A1}",color:"#FFEB3B"},{name:"draft",icon:"\u{1F4DD}",color:"#E0E0E0"},{name:"inProgress",icon:"\u{1F527}",color:"#FFC107"},{name:"editing",icon:"\u{1F58A}\uFE0F",color:"#2196F3"},{name:"pending",icon:"\u23F3",color:"#9C27B0"},{name:"onHold",icon:"\u23F8",color:"#9E9E9E"},{name:"needsUpdate",icon:"\u{1F504}",color:"#FF5722"},{name:"completed",icon:"\u2705",color:"#4CAF50"},{name:"archived",icon:"\u{1F4E6}",color:"#795548"}]},{id:"minimal",name:"Minimal workflow",description:"A simplified set of essential workflow statuses",statuses:[{name:"todo",icon:"\u{1F4CC}",color:"#F44336"},{name:"inProgress",icon:"\u2699\uFE0F",color:"#2196F3"},{name:"review",icon:"\u{1F440}",color:"#9C27B0"},{name:"done",icon:"\u2713",color:"#4CAF50"}]},{id:"academic",name:"Academic research",description:"Status workflow for academic research and writing",statuses:[{name:"research",icon:"\u{1F50D}",color:"#2196F3"},{name:"outline",icon:"\u{1F4D1}",color:"#9E9E9E"},{name:"draft",icon:"\u270F\uFE0F",color:"#FFC107"},{name:"review",icon:"\u{1F52C}",color:"#9C27B0"},{name:"revision",icon:"\u{1F4DD}",color:"#FF5722"},{name:"final",icon:"\u{1F4DA}",color:"#4CAF50"},{name:"published",icon:"\u{1F393}",color:"#795548"}]},{id:"project",name:"Project management",description:"Status workflow for project management and tracking",statuses:[{name:"planning",icon:"\u{1F5D3}\uFE0F",color:"#9E9E9E"},{name:"backlog",icon:"\u{1F4CB}",color:"#E0E0E0"},{name:"ready",icon:"\u{1F6A6}",color:"#8BC34A"},{name:"inDevelopment",icon:"\u{1F468}\u200D\u{1F4BB}",color:"#2196F3"},{name:"testing",icon:"\u{1F9EA}",color:"#9C27B0"},{name:"review",icon:"\u{1F441}\uFE0F",color:"#FFC107"},{name:"approved",icon:"\u{1F44D}",color:"#4CAF50"},{name:"live",icon:"\u{1F680}",color:"#3F51B5"}]}],z=["colorful"];var $={statusColors:{active:"var(--text-success)",onHold:"var(--text-warning)",completed:"var(--text-accent)",dropped:"var(--text-error)",unknown:"var(--text-muted)"},showStatusBar:!0,autoHideStatusBar:!1,customStatuses:[],showStatusIconsInExplorer:!0,hideUnknownStatusInExplorer:!1,collapsedStatuses:{},compactView:!1,enabledTemplates:z,useCustomStatusesOnly:!1,useMultipleStatuses:!0,tagPrefix:"obsidian-note-status",excludeUnknownStatus:!0},G={active:"#00ff00",onHold:"#ffaa00",completed:"#00aaff",dropped:"#ff0000",unknown:"#888888"};var m=require("obsidian");var x=class{constructor(e,t){this.allStatuses=[];this.app=e,this.settings=t,this.updateAllStatuses()}updateSettings(e){this.settings=e,this.updateAllStatuses()}updateAllStatuses(){if(this.allStatuses=[...this.settings.customStatuses],!this.settings.useCustomStatusesOnly){let e=this.getTemplateStatuses();for(let t of e)this.allStatuses.some(s=>s.name.toLowerCase()===t.name.toLowerCase())?this.updateExistingStatusColor(t):this.allStatuses.push(t)}}updateExistingStatusColor(e){this.allStatuses.findIndex(s=>s.name.toLowerCase()===e.name.toLowerCase())!==-1&&e.color&&(this.settings.statusColors[e.name]||(this.settings.statusColors[e.name]=e.color))}getTemplateStatuses(){let e=[];for(let t of this.settings.enabledTemplates){let s=f.find(i=>i.id===t);s&&e.push(...s.statuses)}return e}getAllStatuses(){return this.allStatuses}getFileStatuses(e){let t=this.app.metadataCache.getFileCache(e),s=[];if(t!=null&&t.frontmatter){let i=t.frontmatter[this.settings.tagPrefix];i&&(Array.isArray(i)?this.processStatusArray(i,s):this.processSingleStatus(i.toString(),s))}return s.length>0?s:["unknown"]}processStatusArray(e,t){for(let s of e){let i=s.toString().toLowerCase(),n=this.allStatuses.find(o=>o.name.toLowerCase()===i);n&&t.push(n.name)}}processSingleStatus(e,t){let s=e.toLowerCase(),i=this.allStatuses.find(n=>n.name.toLowerCase()===s);i&&t.push(i.name)}getFilePrimaryStatus(e){return this.getFileStatuses(e)[0]||"unknown"}getStatusIcon(e){let t=this.allStatuses.find(s=>s.name.toLowerCase()===e.toLowerCase());return t?t.icon:"\u2753"}async updateNoteStatuses(e,t){let s=t||this.app.workspace.getActiveFile();!s||!(s instanceof m.TFile)||s.extension!=="md"||(await this.app.fileManager.processFrontMatter(s,i=>{i[this.settings.tagPrefix]=e}),window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:e,file:s.path}})))}async updateNoteStatus(e,t){await this.updateNoteStatuses([e],t)}async addNoteStatus(e,t){let s=t||this.app.workspace.getActiveFile();if(!s||!(s instanceof m.TFile)||s.extension!=="md")return;let i=this.getFileStatuses(s);if(i.includes(e))return;let o=[...i.filter(a=>a!=="unknown"),e];await this.updateNoteStatuses(o,s),window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:o}}))}async removeNoteStatus(e,t){let s=t||this.app.workspace.getActiveFile();if(!s||!(s instanceof m.TFile)||s.extension!=="md")return;let n=this.getFileStatuses(s).filter(o=>o!==e);await this.updateNoteStatuses(n,s),window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:n}}))}async toggleNoteStatus(e,t){let s=t||this.app.workspace.getActiveFile();if(!s||s.extension!=="md")return;let i=this.getFileStatuses(s),n;i.includes(e)?n=i.filter(o=>o!==e):n=[...i.filter(a=>a!=="unknown"),e],await this.updateNoteStatuses(n,s),window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:n}}))}async batchUpdateStatuses(e,t,s="replace",i=!0){if(e.length===0){i&&new m.Notice("No files selected");return}for(let n of e)if(s==="replace")await this.updateNoteStatuses(t,n);else for(let o of t)await this.addNoteStatus(o,n);if(i&&e.length>1){let n=this.formatStatusText(t);new m.Notice(`Updated ${e.length} files with ${n}`)}}formatStatusText(e){return e.length===1?e[0]:`${e.length} statuses`}insertStatusMetadataInEditor(e){let t=e.getValue(),s=["unknown"],i=`${this.settings.tagPrefix}: ${JSON.stringify(s)}`,n=t.match(/^---\n([\s\S]+?)\n---/);n?this.insertIntoExistingFrontmatter(e,t,n,i):this.createFrontmatterWithStatus(e,t,i)}insertIntoExistingFrontmatter(e,t,s,i){let n=s[1],o=n,a=new RegExp(`${this.settings.tagPrefix}:\\s*\\[?[^\\]]*\\]?`,"m");n.match(a)?o=n.replace(a,i):o=`${n}
${i}`;let r=t.replace(/^---\n([\s\S]+?)\n---/,`---
${o}
---`);e.setValue(r)}createFrontmatterWithStatus(e,t,s){let i=`---
${s}
---

${t.trim()}`;e.setValue(i)}getMarkdownFiles(e=""){let t=this.app.vault.getMarkdownFiles();return e?t.filter(s=>s.basename.toLowerCase().includes(e.toLowerCase())):t}groupFilesByStatus(e=""){let t={};this.allStatuses.forEach(i=>{t[i.name]=[]}),t.unknown||(t.unknown=[]);let s=this.getMarkdownFiles(e);for(let i of s){let n=this.getFileStatuses(i);for(let o of n)t[o]&&t[o].push(i)}return t}};var y=class{constructor(e){this.settings=e,this.initializeDynamicStyles()}updateSettings(e){this.settings=e,this.updateDynamicStyles()}initializeDynamicStyles(){this.dynamicStyleEl||(this.dynamicStyleEl=document.createElement("style"),document.head.appendChild(this.dynamicStyleEl)),this.updateDynamicStyles()}getAllStatusColors(){let e={...this.settings.statusColors};if(!this.settings.useCustomStatusesOnly)for(let t of this.settings.enabledTemplates){let s=f.find(i=>i.id===t);if(s)for(let i of s.statuses)i.color&&!e[i.name]&&(e[i.name]=i.color)}return e}updateDynamicStyles(){if(!this.dynamicStyleEl){this.initializeDynamicStyles();return}let e=this.getAllStatusColors(),t="";for(let[s,i]of Object.entries(e))t+=`
                .status-${s} {
                    color: ${i} !important;
                }
                .note-status-bar .note-status-${s},
                .nav-file-title .note-status-${s} {
                    color: ${i} !important;
                }
            `;this.dynamicStyleEl.textContent=t}unload(){this.dynamicStyleEl&&(this.dynamicStyleEl.remove(),this.dynamicStyleEl=void 0)}};var B=require("obsidian"),b=class{constructor(e,t,s){this.currentStatuses=["unknown"];this.statusBarEl=e,this.settings=t,this.statusService=s,this.statusBarEl.addClass("note-status-bar"),this.statusBarEl.addEventListener("contextmenu",i=>{i.preventDefault(),window.dispatchEvent(new CustomEvent("note-status:force-refresh"))}),this.update(["unknown"])}update(e){this.currentStatuses=e,this.render()}render(){if(this.statusBarEl.empty(),this.statusBarEl.removeClass("left","hidden","auto-hide","visible"),this.statusBarEl.addClass("note-status-bar"),!this.settings.showStatusBar){this.statusBarEl.addClass("hidden");return}if(this.currentStatuses.length===1||!this.settings.useMultipleStatuses){let t=this.currentStatuses[0],s=this.statusService.getAllStatuses().find(a=>a.name===t),i=s!=null&&s.description?`${t} - ${s.description}`:t,n=this.statusBarEl.createEl("span",{text:`Status: ${t}`,cls:`note-status-${t}`});(0,B.setTooltip)(n,i);let o=this.statusBarEl.createEl("span",{text:this.statusService.getStatusIcon(t),cls:`note-status-icon status-${t}`});(0,B.setTooltip)(o,i)}else{this.statusBarEl.createEl("span",{text:"Statuses: ",cls:"note-status-label"});let t=this.statusBarEl.createEl("span",{cls:"note-status-badges"});this.currentStatuses.forEach(s=>{let i=this.statusService.getAllStatuses().find(a=>a.name===s),n=i!=null&&i.description?`${s} - ${i.description}`:s,o=t.createEl("span",{cls:`note-status-badge status-${s}`});(0,B.setTooltip)(o,n),o.createEl("span",{text:this.statusService.getStatusIcon(s),cls:"note-status-badge-icon"}),o.createEl("span",{text:s,cls:"note-status-badge-text"})})}let e=this.currentStatuses.length===1&&this.currentStatuses[0]==="unknown";this.settings.autoHideStatusBar&&e?(this.statusBarEl.addClass("auto-hide"),setTimeout(()=>{e&&this.settings.showStatusBar&&this.statusBarEl.addClass("hidden")},500)):this.statusBarEl.addClass("visible")}updateSettings(e){this.settings=e,this.render()}unload(){this.statusBarEl.empty()}};var A=require("obsidian");var v=require("obsidian"),M=class{constructor(e,t,s){this.dropdownElement=null;this.currentStatuses=["unknown"];this.animationDuration=220;this.targetFile=null;this.isOpen=!1;this.app=e,this.statusService=t,this.settings=s,this.onStatusChange=()=>{},this.handleClickOutside=this.handleClickOutside.bind(this),this.handleEscapeKey=this.handleEscapeKey.bind(this),this.clickOutsideHandler=this.handleClickOutside}updateStatuses(e){typeof e=="string"?this.currentStatuses=[e]:this.currentStatuses=[...e],this.isOpen&&this.dropdownElement&&this.refreshDropdownContent()}setTargetFile(e){this.targetFile=e}updateSettings(e){this.settings=e,this.isOpen&&this.dropdownElement&&this.refreshDropdownContent()}setOnStatusChange(e){this.onStatusChange=e}getOnStatusChange(){return this.onStatusChange}toggle(e,t){this.isOpen?(this.close(),setTimeout(()=>{!this.isOpen&&!this.dropdownElement&&this.open(e,t)},50)):this.open(e,t)}open(e,t){if(this.isOpen||this.dropdownElement){this.close(),setTimeout(()=>{this.actuallyOpen(e,t)},10);return}this.actuallyOpen(e,t)}actuallyOpen(e,t){var s;this.isOpen=!0,this.createDropdownElement(),this.refreshDropdownContent(),t?this.positionAt(t.x,t.y):this.positionRelativeTo(e),(s=this.dropdownElement)==null||s.addClass("note-status-popover-animate-in"),setTimeout(()=>{document.addEventListener("click",this.clickOutsideHandler),document.addEventListener("keydown",this.handleEscapeKey)},10)}createDropdownElement(){this.dropdownElement=document.createElement("div"),this.dropdownElement.addClass("note-status-popover","note-status-unified-dropdown"),document.body.appendChild(this.dropdownElement)}close(){!this.dropdownElement||!this.isOpen||(this.dropdownElement.addClass("note-status-popover-animate-out"),document.removeEventListener("click",this.clickOutsideHandler),document.removeEventListener("keydown",this.handleEscapeKey),this.isOpen=!1,setTimeout(()=>{this.dropdownElement&&(this.dropdownElement.remove(),this.dropdownElement=null)},this.animationDuration))}refreshDropdownContent(){if(!this.dropdownElement)return;this.dropdownElement.empty(),this.createHeader(),this.createStatusChips();let e=this.createSearchFilter(),t=this.dropdownElement.createDiv({cls:"note-status-options-container"}),s=this.statusService.getAllStatuses().filter(n=>n.name!=="unknown"),i=(n="")=>{this.populateStatusOptions(t,s,n)};i(),e.addEventListener("input",()=>{i(e.value)}),setTimeout(()=>{e.focus()},50)}createHeader(){if(!this.dropdownElement)return;let t=this.dropdownElement.createDiv({cls:"note-status-popover-header"}).createDiv({cls:"note-status-popover-title"}),s=t.createDiv({cls:"note-status-popover-icon"});(0,v.setIcon)(s,"tag"),t.createSpan({text:"Note status",cls:"note-status-popover-label"})}createStatusChips(){if(!this.dropdownElement)return;let e=this.dropdownElement.createDiv({cls:"note-status-popover-chips"});this.hasNoValidStatus()?this.createEmptyStatusIndicator(e):this.createStatusChipElements(e)}hasNoValidStatus(){return this.currentStatuses.length===0||this.currentStatuses.length===1&&this.currentStatuses[0]==="unknown"}createEmptyStatusIndicator(e){e.createDiv({cls:"note-status-empty-indicator",text:"No status assigned"})}createStatusChipElements(e){this.currentStatuses.forEach(t=>{if(t==="unknown")return;let s=this.statusService.getAllStatuses().find(i=>i.name===t);s&&this.createSingleStatusChip(e,t,s)})}createSingleStatusChip(e,t,s){let i=e.createDiv({cls:`note-status-chip status-${t}`});i.createSpan({text:s.icon,cls:"note-status-chip-icon"}),i.createSpan({text:s.name,cls:"note-status-chip-text"}),this.addRemoveButton(i,t)}addRemoveButton(e,t){let s=this.statusService.getAllStatuses().find(o=>o.name===t),i=s!=null&&s.description?`${t} - ${s.description}`:t;(0,v.setTooltip)(e,i);let n=e.createDiv({cls:"note-status-chip-remove",attr:{"aria-label":`Remove ${t} status`,title:`Remove ${t} status`}});(0,v.setIcon)(n,"x"),n.addEventListener("click",async o=>{o.stopPropagation(),e.addClass("note-status-chip-removing"),setTimeout(async()=>{this.targetFile?await this.removeStatus(t):this.onStatusChange([t])},150)})}async removeStatus(e){if(!this.targetFile)return;await this.statusService.removeNoteStatus(e,this.targetFile);let t=this.statusService.getFileStatuses(this.targetFile);this.currentStatuses=t,this.refreshDropdownContent(),this.onStatusChange(t)}createSearchFilter(){if(!this.dropdownElement)throw new Error("Dropdown element not initialized");return this.dropdownElement.createDiv({cls:"note-status-popover-search"}).createEl("input",{type:"text",placeholder:"Filter statuses...",cls:"note-status-popover-search-input"})}populateStatusOptions(e,t,s=""){e.empty();let i=this.filterStatuses(t,s);if(i.length===0){this.createNoMatchingStatusesMessage(e,s);return}i.forEach(n=>{this.createStatusOption(e,n)})}filterStatuses(e,t){return t?e.filter(s=>s.name.toLowerCase().includes(t.toLowerCase())||s.icon.includes(t)):e}createNoMatchingStatusesMessage(e,t){e.createDiv({cls:"note-status-empty-options",text:t?`No statuses match "${t}"`:"No statuses found"})}createStatusOption(e,t){let s=this.currentStatuses.includes(t.name),i=e.createDiv({cls:`note-status-option ${s?"is-selected":""} status-${t.name}`});if(i.createSpan({text:t.icon,cls:"note-status-option-icon"}),i.createSpan({text:t.name,cls:"note-status-option-text"}),t.description&&(0,v.setTooltip)(i,`${t.name} - ${t.description}`),s){let n=i.createDiv({cls:"note-status-option-check"});(0,v.setIcon)(n,"check")}i.addEventListener("click",()=>this.handleStatusOptionClick(i,t))}handleStatusOptionClick(e,t){try{e.addClass("note-status-option-selecting"),setTimeout(async()=>{this.targetFile?await this.handleStatusChangeForTargetFile(t):(this.onStatusChange([t.name]),this.settings.useMultipleStatuses||this.close())},150)}catch(s){console.error("Error updating status:",s)}}async handleStatusChangeForTargetFile(e){if(!this.targetFile)return;this.settings.useMultipleStatuses?await this.statusService.toggleNoteStatus(e.name,this.targetFile):(await this.statusService.updateNoteStatuses([e.name],this.targetFile),this.close());let t=this.statusService.getFileStatuses(this.targetFile);this.currentStatuses=[...t],this.onStatusChange(t)}positionAt(e,t){this.dropdownElement&&(this.dropdownElement.addClass("note-status-popover-fixed"),this.dropdownElement.style.setProperty("--pos-x-px",`${e}px`),this.dropdownElement.style.setProperty("--pos-y-px",`${t}px`),setTimeout(()=>this.adjustPositionToViewport(),0))}adjustPositionToViewport(){if(!this.dropdownElement)return;let e=this.dropdownElement.getBoundingClientRect();e.right>window.innerWidth?(this.dropdownElement.addClass("note-status-popover-right"),this.dropdownElement.style.setProperty("--right-offset-px","10px")):this.dropdownElement.removeClass("note-status-popover-right"),e.bottom>window.innerHeight?(this.dropdownElement.addClass("note-status-popover-bottom"),this.dropdownElement.style.setProperty("--bottom-offset-px","10px")):this.dropdownElement.removeClass("note-status-popover-bottom");let t=window.innerHeight-e.top-20;this.dropdownElement.style.setProperty("--max-height-px",`${t}px`)}positionRelativeTo(e){if(!this.dropdownElement)return;this.dropdownElement.addClass("note-status-popover-fixed");let t=e.getBoundingClientRect();this.dropdownElement.style.setProperty("--pos-y-px",`${t.bottom+5}px`),this.dropdownElement.style.setProperty("--pos-x-px",`${t.left}px`),setTimeout(()=>this.adjustRelativePosition(t),0)}adjustRelativePosition(e){if(!this.dropdownElement)return;let t=this.dropdownElement.getBoundingClientRect();t.right>window.innerWidth?(this.dropdownElement.addClass("note-status-popover-right"),this.dropdownElement.style.setProperty("--right-offset-px",`${window.innerWidth-e.right}px`)):this.dropdownElement.removeClass("note-status-popover-right"),t.bottom>window.innerHeight?(this.dropdownElement.addClass("note-status-popover-bottom"),this.dropdownElement.style.setProperty("--bottom-offset-px",`${window.innerHeight-e.top+5}px`)):this.dropdownElement.removeClass("note-status-popover-bottom");let s=window.innerHeight-t.top-20;this.dropdownElement.style.setProperty("--max-height-px",`${s}px`)}handleClickOutside(e){this.dropdownElement&&!this.dropdownElement.contains(e.target)&&this.close()}handleEscapeKey(e){e.key==="Escape"&&this.close()}dispose(){this.close()}};var F=class{constructor(e,t,s){this.currentStatuses=["unknown"];this.app=e,this.settings=t,this.statusService=s,this.dropdownComponent=new M(e,s,t),this.setupDropdownCallbacks()}setupDropdownCallbacks(){this.dropdownComponent.setOnStatusChange(e=>{this.currentStatuses=[...e],this.updateToolbarButton(),window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:e}})),window.dispatchEvent(new CustomEvent("note-status:refresh-ui"))})}initToolbarButton(){this.toolbarButton&&(this.toolbarButton.remove(),this.toolbarButton=void 0),setTimeout(()=>{let e=this.findToolbarContainer();if(!e){console.error("Note Status: Could not find toolbar container");return}this.createToolbarButton(e)},500)}findToolbarContainer(){return document.querySelector(".workspace-leaf .view-header .view-actions")}createToolbarButton(e){this.toolbarButton=document.createElement("button"),this.toolbarButton.addClass("note-status-toolbar-button","clickable-icon","view-action"),this.toolbarButton.setAttribute("aria-label","Note status"),this.updateToolbarButton(),this.toolbarButton.addEventListener("click",t=>{t.stopPropagation(),t.preventDefault(),this.toggleStatusPopover()});try{e.prepend(this.toolbarButton)}catch(t){console.error("Note Status: Error inserting toolbar button",t),e.appendChild(this.toolbarButton)}}updateToolbarButton(){if(!this.toolbarButton)return;this.toolbarButton.empty();let e=this.currentStatuses.length>0&&!this.currentStatuses.every(s=>s==="unknown"),t=document.createElement("div");t.addClass("note-status-toolbar-badge-container"),e?this.addStatusBadge(t):this.addDefaultStatusIcon(t),this.toolbarButton.appendChild(t)}addStatusBadge(e){let t=this.currentStatuses[0],s=this.statusService.getAllStatuses().find(i=>i.name===t);if(s){let i=document.createElement("span");if(i.addClass("note-status-toolbar-icon",`status-${t}`),i.textContent=s.icon,e.appendChild(i),this.settings.useMultipleStatuses&&this.currentStatuses.length>1){let n=document.createElement("span");n.addClass("note-status-count-badge"),n.textContent=`+${this.currentStatuses.length-1}`,e.appendChild(n)}}}addDefaultStatusIcon(e){let t=document.createElement("span");t.addClass("note-status-toolbar-icon","status-unknown"),t.textContent=this.statusService.getStatusIcon("unknown"),e.appendChild(t)}update(e){typeof e=="string"?this.currentStatuses=[e]:this.currentStatuses=[...e],this.updateToolbarButton(),this.dropdownComponent.updateStatuses(this.currentStatuses)}updateSettings(e){this.settings=e,this.updateToolbarButton(),this.dropdownComponent.updateSettings(e)}toggleStatusPopover(){let e=this.app.workspace.getActiveFile();e&&this.openStatusDropdown({target:this.toolbarButton,files:[e]})}showInContextMenu(e,t){let s=this.app.workspace.getActiveFile();s&&this.openStatusDropdown({editor:e,view:t,files:[s],onStatusChange:async i=>{i.length>0&&(this.settings.useMultipleStatuses?await this.statusService.toggleNoteStatus(i[0],s):await this.statusService.updateNoteStatuses(i,s),window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:i,file:s.path}})),window.dispatchEvent(new CustomEvent("note-status:refresh-ui")))}})}getCursorPosition(e,t){try{let s=e.getCursor("head"),i=t.contentEl.querySelector(`.cm-line:nth-child(${s.line+1})`);if(i){let o=i.getBoundingClientRect();return{x:o.left+20,y:o.bottom+5}}let n=t.contentEl.querySelector(".cm-editor");if(n){let o=n.getBoundingClientRect();return{x:o.left+100,y:o.top+100}}}catch(s){console.error("Error getting position for dropdown:",s)}return{x:window.innerWidth/2,y:window.innerHeight/3}}createDummyTarget(e){let t=document.createElement("div");return t.addClass("note-status-dummy-target"),t.style.setProperty("--pos-x-px",`${e.x}px`),t.style.setProperty("--pos-y-px",`${e.y}px`),document.body.appendChild(t),t}render(){}unload(){this.dropdownComponent.dispose(),this.toolbarButton&&(this.toolbarButton.remove(),this.toolbarButton=void 0)}openStatusDropdown(e){if(this.dropdownComponent.isOpen){this.dropdownComponent.close(),setTimeout(()=>{this._openStatusDropdown(e)},50);return}this._openStatusDropdown(e)}findCommonStatuses(e){return e.length===0?["unknown"]:this.statusService.getFileStatuses(e[0]).filter(s=>s==="unknown"?!1:e.every(i=>this.statusService.getFileStatuses(i).includes(s)))}async toggleStatusForFiles(e,t){let i=e.filter(n=>this.statusService.getFileStatuses(n).includes(t)).length>e.length/2;for(let n of e)i?await this.statusService.removeNoteStatus(t,n):await this.statusService.addNoteStatus(t,n)}_openStatusDropdown(e){let t=e.files||[this.app.workspace.getActiveFile()].filter(Boolean);if(!t.length){new A.Notice("No files selected");return}this.dropdownComponent.setTargetFile(null),this.dropdownComponent.setOnStatusChange(()=>{});let s=t.length===1,i=s?t[0]:null;this.dropdownComponent.setTargetFile(i);let n;if(i?n=this.statusService.getFileStatuses(i):t.length>1?n=this.findCommonStatuses(t):n=["unknown"],this.dropdownComponent.updateStatuses(n),e.onStatusChange)this.dropdownComponent.setOnStatusChange(e.onStatusChange);else if(s)this.dropdownComponent.setOnStatusChange(r=>{window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:r}})),window.dispatchEvent(new CustomEvent("note-status:refresh-ui"))});else{let r=[...t];this.dropdownComponent.setOnStatusChange(async u=>{if(u.length>0){let d=u[u.length-1];await this.toggleStatusForFiles(r,d),window.dispatchEvent(new CustomEvent("note-status:batch-update-complete",{detail:{status:d,fileCount:r.length}})),window.dispatchEvent(new CustomEvent("note-status:refresh-ui"))}})}if(e.editor&&e.view){let r=this.getCursorPosition(e.editor,e.view),u=this.createDummyTarget(r);this.dropdownComponent.open(u,r),setTimeout(()=>{u.parentNode&&u.parentNode.removeChild(u)},100);return}if(e.target){if(e.position)this.dropdownComponent.open(e.target,e.position);else{let r=e.target.getBoundingClientRect(),u={x:r.left,y:r.bottom+5};this.dropdownComponent.open(e.target,u)}return}if(e.position){let r=document.createElement("div");r.addClass("note-status-dummy-target"),r.style.setProperty("--pos-x-px",`${e.position.x}px`),r.style.setProperty("--pos-y-px",`${e.position.y}px`),document.body.appendChild(r),this.dropdownComponent.open(r,e.position),setTimeout(()=>{r.parentNode&&r.parentNode.removeChild(r)},100);return}let o={x:window.innerWidth/2,y:window.innerHeight/3},a=document.createElement("div");a.addClass("note-status-dummy-target"),a.style.setProperty("--pos-x-px",`${o.x}px`),a.style.setProperty("--pos-y-px",`${o.y}px`),document.body.appendChild(a),this.dropdownComponent.open(a,o),setTimeout(()=>{a.parentNode&&a.parentNode.removeChild(a)},100)}addToolbarButtonToActiveLeaf(){let e=this.app.workspace.activeLeaf;if(!e||!e.view||!(e.view instanceof A.MarkdownView))return;let s=e.view.containerEl.querySelector(".view-header .view-actions");if(!s)return;let i=s.querySelector(".note-status-toolbar-button");if(i){this.toolbarButton=i,this.updateToolbarButton();return}this.toolbarButton=document.createElement("button"),this.toolbarButton.addClass("note-status-toolbar-button","clickable-icon","view-action"),this.toolbarButton.setAttribute("aria-label","Note status"),this.updateToolbarButton(),this.toolbarButton.addEventListener("click",n=>{n.stopPropagation(),n.preventDefault(),this.toggleStatusPopover()}),s.firstChild?s.insertBefore(this.toolbarButton,s.firstChild):s.appendChild(this.toolbarButton)}};var p=require("obsidian"),E=class extends p.View{constructor(t,s){super(t);this.searchInput=null;this.plugin=s,this.settings=s.settings,this.statusService=s.statusService,this.paginationState={itemsPerPage:100,currentPage:{}}}getViewType(){return"status-pane"}getDisplayText(){return"Status pane"}getIcon(){return"status-pane"}async onOpen(){await this.setupPane()}async setupPane(){let{containerEl:t}=this;t.empty(),t.addClass("note-status-pane","nav-files-container");let s=t.createDiv({cls:"note-status-header"});this.createSearchInput(s),this.createActionToolbar(s),t.toggleClass("compact-view",this.settings.compactView);let n=t.createDiv({cls:"note-status-groups-container"}).createDiv({cls:"note-status-loading"});n.innerHTML="<span>Loading notes...</span>",setTimeout(async()=>{await this.renderGroups(""),n.remove()},10)}createSearchInput(t){let i=t.createDiv({cls:"note-status-search search-input-container"}).createDiv({cls:"search-input-wrapper"}),n=i.createEl("span",{cls:"search-input-icon"});(0,p.setIcon)(n,"search"),this.searchInput=i.createEl("input",{type:"text",placeholder:"Search notes...",cls:"note-status-search-input search-input"}),this.searchInput.addEventListener("input",()=>{this.renderGroups(this.searchInput.value.toLowerCase()),this.toggleClearButton()});let o=i.createEl("span",{cls:"search-input-clear-button"});(0,p.setIcon)(o,"x"),o.addEventListener("click",()=>{this.searchInput&&(this.searchInput.value="",this.renderGroups(""),this.toggleClearButton())})}toggleClearButton(){let t=this.containerEl.querySelector(".search-input-clear-button");t&&this.searchInput&&t.toggleClass("is-visible",!!this.searchInput.value)}createActionToolbar(t){let s=t.createDiv({cls:"status-pane-actions-container"}),i=s.createEl("button",{type:"button",title:this.settings.compactView?"Switch to Standard View":"Switch to Compact View",cls:"note-status-view-toggle clickable-icon"});(0,p.setIcon)(i,this.settings.compactView?"layout":"table"),i.addEventListener("click",async()=>{var o;this.settings.compactView=!this.settings.compactView,i.title=this.settings.compactView?"Switch to Standard View":"Switch to Compact View",i.empty(),(0,p.setIcon)(i,this.settings.compactView?"layout":"table"),window.dispatchEvent(new CustomEvent("note-status:settings-changed")),this.containerEl.toggleClass("compact-view",this.settings.compactView),await this.renderGroups(((o=this.searchInput)==null?void 0:o.value.toLowerCase())||"")});let n=s.createEl("button",{type:"button",title:"Refresh statuses",cls:"note-status-actions-refresh clickable-icon"});(0,p.setIcon)(n,"refresh-cw"),n.addEventListener("click",async()=>{var o;await this.renderGroups(((o=this.searchInput)==null?void 0:o.value.toLowerCase())||""),new p.Notice("Status pane refreshed")})}async renderGroups(t=""){let{containerEl:s}=this,i=s.querySelector(".note-status-groups-container");if(!i)return;if(t){i.empty();let a=i.createDiv({cls:"note-status-loading"});a.innerHTML=`<span>Searching for "${t}"...</span>`,await new Promise(r=>setTimeout(r,0))}else i.empty();let n=this.getFilteredStatusGroups(t),o=i.querySelector(".note-status-loading");if(o&&o.remove(),Object.entries(n).forEach(([a,r])=>{if(r.length>0){if(a==="unknown"&&this.settings.excludeUnknownStatus)return;this.renderStatusGroup(i,a,r)}}),i.childElementCount===0){let a=i.createDiv({cls:"note-status-empty-indicator"});t?a.textContent=`No notes found matching "${t}"`:this.settings.excludeUnknownStatus&&(a.empty(),a.createDiv({text:"No notes with status found. Unassigned notes are currently hidden.",cls:"note-status-empty-message"}),a.createDiv({cls:"note-status-button-container"}).createEl("button",{text:"Show unassigned notes",cls:"note-status-show-unassigned-button"}).addEventListener("click",async()=>{this.settings.excludeUnknownStatus=!1,await this.plugin.saveSettings(),this.renderGroups(t)}))}}getFilteredStatusGroups(t=""){let s=this.statusService.groupFilesByStatus(t),i={};return Object.entries(s).forEach(([n,o])=>{o.length>0&&!(n==="unknown"&&this.settings.excludeUnknownStatus)&&(i[n]=o)}),i}renderStatusGroup(t,s,i){var O;let n=t.createDiv({cls:"status-group nav-folder"}),o=n.createDiv({cls:"nav-folder-title"}),a=o.createDiv({cls:"collapse-indicator"});(0,p.setIcon)(a,"chevron-down");let r=o.createDiv({cls:"nav-folder-title-content"}),u=this.statusService.getStatusIcon(s);r.createSpan({text:`${s} ${u} (${i.length})`,cls:`status-${s}`}),((O=this.settings.collapsedStatuses[s])!=null?O:!1)&&(n.addClass("is-collapsed"),a.empty(),(0,p.setIcon)(a,"chevron-right")),o.addEventListener("click",C=>{C.preventDefault();let P=n.hasClass("is-collapsed");P?(n.removeClass("is-collapsed"),a.empty(),(0,p.setIcon)(a,"chevron-down")):(n.addClass("is-collapsed"),a.empty(),(0,p.setIcon)(a,"chevron-right")),this.settings.collapsedStatuses[s]=!P,window.dispatchEvent(new CustomEvent("note-status:settings-changed"))});let w=n.createDiv({cls:"nav-folder-children"});i.sort((C,P)=>C.basename.localeCompare(P.basename)),this.paginationState.currentPage[s]||(this.paginationState.currentPage[s]=0);let L=this.paginationState.currentPage[s],g=this.paginationState.itemsPerPage,N=Math.ceil(i.length/g),U=L*g,j=Math.min(U+g,i.length);i.slice(U,j).forEach(C=>{this.createFileListItem(w,C,s)}),i.length>g&&this.addPaginationControls(w,s,L,N,i.length)}addPaginationControls(t,s,i,n,o){let a=t.createDiv({cls:"note-status-pagination"});i>0&&a.createEl("button",{text:"Previous",cls:"note-status-pagination-button"}).addEventListener("click",u=>{var d;u.stopPropagation(),this.paginationState.currentPage[s]=i-1,this.renderGroups(((d=this.searchInput)==null?void 0:d.value.toLowerCase())||"")}),a.createSpan({text:`Page ${i+1} of ${n} (${o} notes)`,cls:"note-status-pagination-info"}),i<n-1&&a.createEl("button",{text:"Next",cls:"note-status-pagination-button"}).addEventListener("click",u=>{var d;u.stopPropagation(),this.paginationState.currentPage[s]=i+1,this.renderGroups(((d=this.searchInput)==null?void 0:d.value.toLowerCase())||"")})}createFileListItem(t,s,i){if(!s||!(s instanceof p.TFile))return;let n=t.createDiv({cls:"nav-file"}),o=n.createDiv({cls:"nav-file-title"});if(!this.settings.compactView){let a=o.createDiv({cls:"nav-file-icon"});(0,p.setIcon)(a,"file")}o.createSpan({text:s.basename,cls:"nav-file-title-content"}),o.createSpan({cls:`note-status-icon nav-file-tag status-${i}`,text:this.statusService.getStatusIcon(i)}),n.addEventListener("click",a=>{a.preventDefault(),this.app.workspace.openLinkText(s.path,s.path,!0)}),n.addEventListener("contextmenu",a=>{a.preventDefault(),this.showFileContextMenu(a,s)})}showFileContextMenu(t,s){let i=new p.Menu;i.addItem(n=>n.setTitle("Change status").setIcon("tag").onClick(()=>{this.plugin.statusContextMenu.showForFile(s,t)})),i.addItem(n=>n.setTitle("Open in new tab").setIcon("lucide-external-link").onClick(()=>{this.app.workspace.openLinkText(s.path,s.path,"tab")})),i.showAtMouseEvent(t)}onClose(){return this.containerEl.empty(),Promise.resolve()}updateSettings(t){var s;this.settings=t,this.containerEl.toggleClass("compact-view",t.compactView),this.renderGroups(((s=this.searchInput)==null?void 0:s.value.toLowerCase())||"")}};var S=require("obsidian"),k=class{constructor(e,t,s){this.iconUpdateQueue=new Set;this.isProcessingQueue=!1;this.debouncedUpdateAll=(0,S.debounce)(()=>this.processUpdateQueue(),100,!0);this.app=e,this.settings=t,this.statusService=s}updateSettings(e){let t=this.settings.showStatusIconsInExplorer;this.settings=e,this.handleSettingsChange(t)}handleSettingsChange(e){e!==this.settings.showStatusIconsInExplorer?this.settings.showStatusIconsInExplorer?this.updateAllFileExplorerIcons():this.removeAllFileExplorerIcons():this.settings.showStatusIconsInExplorer&&this.updateAllFileExplorerIcons()}findFileExplorerView(){let e=this.app.workspace.getLeavesOfType("file-explorer")[0];if(e&&e.view)return e.view;for(let t of this.app.workspace.getLeavesOfType(""))if(t.view&&"fileItems"in t.view)return t.view;return null}queueFileUpdate(e){!this.settings.showStatusIconsInExplorer||e.extension!=="md"||(this.iconUpdateQueue.add(e.path),this.debouncedUpdateAll())}async processUpdateQueue(){if(!(this.isProcessingQueue||this.iconUpdateQueue.size===0)){this.isProcessingQueue=!0;try{let e=this.findFileExplorerView();if(!e||!e.fileItems){setTimeout(()=>this.debouncedUpdateAll(),200);return}let t=50,s=Array.from(this.iconUpdateQueue);for(let i=0;i<s.length;i+=t){let n=s.slice(i,i+t);for(let o of n){let a=this.app.vault.getFileByPath(o);a&&a instanceof S.TFile&&this.updateSingleFileIcon(a,e),this.iconUpdateQueue.delete(o)}i+t<s.length&&await new Promise(o=>setTimeout(o,0))}}catch(e){console.error("Note Status: Error processing file update queue",e)}finally{this.isProcessingQueue=!1,this.iconUpdateQueue.size>0&&this.debouncedUpdateAll()}}}updateSingleFileIcon(e,t){if(!(!this.settings.showStatusIconsInExplorer||e.extension!=="md"))try{let s=t.fileItems[e.path];if(!s)return;let i=s.titleEl||s.selfEl;if(!i)return;let n=this.statusService.getFileStatuses(e);if(this.removeExistingIcons(i),this.shouldHideUnknownStatus(n))return;this.addStatusIcons(i,n)}catch(s){console.error(`Note Status: Error updating icon for ${e.path}`,s)}}shouldHideUnknownStatus(e){return this.settings.hideUnknownStatusInExplorer&&e.length===1&&e[0]==="unknown"}removeExistingIcons(e){e.querySelectorAll(".note-status-icon, .note-status-icon-container").forEach(s=>{(s.classList.contains("note-status-icon")||s.classList.contains("note-status-icon-container"))&&s.remove()})}addStatusIcons(e,t){let s=document.createElement("span");s.className="note-status-icon-container",this.settings.useMultipleStatuses&&t.length>0&&t[0]!=="unknown"?this.addMultipleStatusIcons(s,t):this.addPrimaryStatusIcon(s,t),s.childElementCount>0&&e.appendChild(s)}addMultipleStatusIcons(e,t){t.forEach(s=>{this.addSingleStatusIcon(e,s)})}addPrimaryStatusIcon(e,t){let s=t[0]||"unknown";(s!=="unknown"||!this.settings.autoHideStatusBar)&&this.addSingleStatusIcon(e,s)}addSingleStatusIcon(e,t){let s=document.createElement("span");s.className=`note-status-icon nav-file-tag status-${t}`,s.textContent=this.statusService.getStatusIcon(t);let i=this.statusService.getAllStatuses().find(o=>o.name===t),n=i!=null&&i.description?`${t} - ${i.description}`:t;(0,S.setTooltip)(s,n),e.appendChild(s)}updateFileExplorerIcons(e){if(!e||!this.settings.showStatusIconsInExplorer||e.extension!=="md")return;let t=this.app.workspace.getActiveFile();t&&t.path===e.path&&this.updateSingleFileIconDirectly(e),this.queueFileUpdate(e)}updateSingleFileIconDirectly(e){try{let t=this.findFileExplorerView();if(!t)return;this.updateSingleFileIcon(e,t)}catch(t){console.error("Note Status: Error updating file icon directly",t)}}updateAllFileExplorerIcons(){if(!this.settings.showStatusIconsInExplorer){this.removeAllFileExplorerIcons();return}(async()=>{let t=this.app.vault.getMarkdownFiles(),s=100;for(let i=0;i<t.length;i+=s)t.slice(i,i+s).forEach(o=>this.queueFileUpdate(o)),i+s<t.length&&await new Promise(o=>setTimeout(o,0))})()}removeAllFileExplorerIcons(){let e=this.findFileExplorerView();!e||!e.fileItems||(Object.values(e.fileItems).forEach(t=>{let s=t.titleEl||t.selfEl;s&&this.removeExistingIcons(s)}),this.iconUpdateQueue.clear())}getSelectedFiles(){let e=this.findFileExplorerView();if(!e||!e.fileItems)return[];let t=[];return Object.entries(e.fileItems).forEach(([s,i])=>{var n;(n=i.el)!=null&&n.classList.contains("is-selected")&&i.file&&i.file instanceof S.TFile&&i.file.extension==="md"&&t.push(i.file)}),t}unload(){this.removeAllFileExplorerIcons(),this.debouncedUpdateAll.cancel()}};var T=require("obsidian"),I=class{constructor(e,t,s,i,n){this.app=e,this.settings=t,this.statusService=s,this.statusDropdown=i,this.explorerIntegration=n}updateSettings(e){this.settings=e}showForFiles(e,t){if(e.length!==0){if(e.length===1){this.showSingleFileDropdown(e[0],t);return}this.showMultipleFilesMenu(e,t)}}showSingleFileDropdown(e,t){this.statusDropdown.openStatusDropdown({position:t,files:[e],onStatusChange:async s=>{s.length>0&&await this.handleStatusUpdateForFile(e,s)}})}showMultipleFilesMenu(e,t){let s=new T.Menu;s.addItem(i=>(i.setTitle(`Update ${e.length} files`).setDisabled(!0),i)),s.addItem(i=>i.setTitle("Manage statuses...").setIcon("tag").onClick(()=>{this.statusDropdown.openStatusDropdown({position:t,files:e})})),t?s.showAtPosition(t):s.showAtMouseEvent(new MouseEvent("contextmenu"))}showForFile(e,t){if(!(e instanceof T.TFile)||e.extension!=="md")return;let s={x:t.clientX,y:t.clientY};this.statusDropdown.openStatusDropdown({position:s,files:[e],onStatusChange:async i=>{i.length>0&&await this.handleStatusUpdateForFile(e,i)}})}async handleStatusUpdateForFile(e,t){!(e instanceof T.TFile)||e.extension!=="md"||t.length===0||(this.settings.useMultipleStatuses?this.statusService.getFileStatuses(e).includes(t[0])?await this.statusService.removeNoteStatus(t[0],e):await this.statusService.addNoteStatus(t[0],e):await this.statusService.updateNoteStatuses([t[0]],e),this.app.metadataCache.trigger("changed",e),this.updateExplorerIcon(e),this.triggerUIUpdates(t,e))}updateExplorerIcon(e){setTimeout(()=>{this.explorerIntegration&&this.explorerIntegration.updateFileExplorerIcons(e)},50)}triggerUIUpdates(e,t){window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:e,file:t.path}})),window.dispatchEvent(new CustomEvent("note-status:refresh-ui")),setTimeout(()=>{window.dispatchEvent(new CustomEvent("note-status:force-refresh"))},100)}};var c=require("obsidian");var D=class extends c.PluginSettingTab{constructor(t,s){super(t,s);this.plugin=s}display(){let{containerEl:t}=this;t.empty(),this.displayTemplateSettings(t.createDiv()),new c.Setting(t).setName("User interface").setHeading(),new c.Setting(t).setName("Show status bar").setDesc("Display the status bar").addToggle(n=>n.setValue(this.plugin.settings.showStatusBar).onChange(async o=>{this.plugin.settings.showStatusBar=o,await this.plugin.saveSettings()})),new c.Setting(t).setName("Auto-hide status bar").setDesc("Hide the status bar when status is unknown").addToggle(n=>n.setValue(this.plugin.settings.autoHideStatusBar).onChange(async o=>{this.plugin.settings.autoHideStatusBar=o,await this.plugin.saveSettings()})),new c.Setting(t).setName("Show status icons in file explorer").setDesc("Display status icons in the file explorer").addToggle(n=>n.setValue(this.plugin.settings.showStatusIconsInExplorer).onChange(async o=>{this.plugin.settings.showStatusIconsInExplorer=o,await this.plugin.saveSettings()})),new c.Setting(t).setName("Hide unknown status in file explorer").setDesc("Hide status icons for files with unknown status in the file explorer").addToggle(n=>n.setValue(this.plugin.settings.hideUnknownStatusInExplorer||!1).onChange(async o=>{this.plugin.settings.hideUnknownStatusInExplorer=o,await this.plugin.saveSettings(),this.plugin.explorerIntegration.updateAllFileExplorerIcons()})),new c.Setting(t).setName("Default to compact view").setDesc("Start the status pane in compact view by default").addToggle(n=>n.setValue(this.plugin.settings.compactView||!1).onChange(async o=>{this.plugin.settings.compactView=o,await this.plugin.saveSettings()})),new c.Setting(t).setName("Exclude unassigned notes from status pane").setDesc("Improves performance by excluding notes with no assigned status from the status pane. Recommended for large vaults.").addToggle(n=>n.setValue(this.plugin.settings.excludeUnknownStatus||!1).onChange(async o=>{this.plugin.settings.excludeUnknownStatus=o,await this.plugin.saveSettings();let a=this.app.workspace.getLeavesOfType("status-pane")[0];a&&a.view&&window.dispatchEvent(new CustomEvent("note-status:refresh-ui"))})),new c.Setting(t).setName("Status tag").setHeading(),new c.Setting(t).setName("Enable multiple statuses").setDesc("Allow notes to have multiple statuses at the same time").addToggle(n=>n.setValue(this.plugin.settings.useMultipleStatuses).onChange(async o=>{this.plugin.settings.useMultipleStatuses=o,await this.plugin.saveSettings(),window.dispatchEvent(new CustomEvent("note-status:refresh-ui"))})),new c.Setting(t).setName("Status tag prefix").setDesc("The YAML frontmatter tag name used for status (default: obsidian-note-status)").addText(n=>n.setValue(this.plugin.settings.tagPrefix).onChange(async o=>{o.trim()&&(this.plugin.settings.tagPrefix=o.trim(),await this.plugin.saveSettings(),window.dispatchEvent(new CustomEvent("note-status:refresh-ui")))})),new c.Setting(t).setName("Custom statuses").setHeading(),new c.Setting(t).setName("Use only custom statuses").setDesc("Ignore template statuses and use only the custom statuses defined below").addToggle(n=>n.setValue(this.plugin.settings.useCustomStatusesOnly||!1).onChange(async o=>{this.plugin.settings.useCustomStatusesOnly=o,await this.plugin.saveSettings(),window.dispatchEvent(new CustomEvent("note-status:refresh-ui")),this.display()}));let s=t.createDiv({cls:"custom-status-list"}),i=()=>{s.empty(),this.plugin.settings.customStatuses.forEach((n,o)=>{let a=new c.Setting(s).setName(n.name).setClass("status-item");a.addText(r=>r.setPlaceholder("Name").setValue(n.name).onChange(async u=>{let d=n.name;n.name=u||"unnamed",d!==n.name&&(this.plugin.settings.statusColors[n.name]=this.plugin.settings.statusColors[d],delete this.plugin.settings.statusColors[d]),await this.plugin.saveSettings()})),a.addText(r=>r.setPlaceholder("Icon").setValue(n.icon).onChange(async u=>{n.icon=u||"\u2753",await this.plugin.saveSettings()})),a.addColorPicker(r=>r.setValue(this.plugin.settings.statusColors[n.name]||"#ffffff").onChange(async u=>{this.plugin.settings.statusColors[n.name]=u,await this.plugin.saveSettings()})),a.addText(r=>r.setPlaceholder("Description").setValue(n.description||"").onChange(async u=>{n.description=u,await this.plugin.saveSettings()})),a.addButton(r=>r.setButtonText("Remove").setClass("status-remove-button").setWarning().onClick(async()=>{this.plugin.settings.customStatuses.splice(o,1),delete this.plugin.settings.statusColors[n.name],await this.plugin.saveSettings(),i()}))})};i(),new c.Setting(t).setName("Add new status").setDesc("Add a custom status with a name, icon, and color").addButton(n=>n.setButtonText("Add Status").setCta().onClick(async()=>{let o={name:`status${this.plugin.settings.customStatuses.length+1}`,icon:"\u2B50"};this.plugin.settings.customStatuses.push(o),this.plugin.settings.statusColors[o.name]="#ffffff",await this.plugin.saveSettings(),i()}))}displayTemplateSettings(t){new c.Setting(t).setName("Status templates").setHeading(),t.createEl("p",{text:"Enable predefined templates to quickly add common status workflows",cls:"setting-item-description"});let s=t.createDiv({cls:"templates-container"});f.forEach(a=>{let r=s.createDiv({cls:"template-item"}),u=r.createDiv({cls:"template-header"}),d=this.plugin.settings.enabledTemplates.includes(a.id),w=u.createEl("input",{type:"checkbox",cls:"template-checkbox"});w.checked=d,w.addEventListener("change",async()=>{w.checked?this.plugin.settings.enabledTemplates.includes(a.id)||this.plugin.settings.enabledTemplates.push(a.id):this.plugin.settings.enabledTemplates=this.plugin.settings.enabledTemplates.filter(g=>g!==a.id),await this.plugin.saveSettings(),window.dispatchEvent(new CustomEvent("note-status:refresh-ui"))}),u.createEl("span",{text:a.name,cls:"template-name"}),r.createEl("div",{text:a.description,cls:"template-description"});let L=r.createDiv({cls:"template-statuses"});a.statuses.forEach(g=>{let N=L.createEl("div",{cls:"template-status-chip"});N.createEl("span",{cls:"status-color-dot"}).style.setProperty("--dot-color",g.color||"#ffffff"),N.createSpan({text:`${g.icon} ${g.name}`})})});let i=t.createDiv({cls:"template-buttons"});i.createEl("button",{text:"Import template",cls:"mod-cta"}).addEventListener("click",()=>{new c.Notice("Template import functionality coming soon!")}),i.createEl("button",{text:"Export templates",cls:""}).addEventListener("click",()=>{new c.Notice("Template export functionality coming soon!")})}};var H=class extends l.Plugin{constructor(){super(...arguments);this.statusPaneLeaf=null;this.lastActiveFile=null;this.debouncedCheckNoteStatus=(0,l.debounce)(()=>this.checkNoteStatus(),100,!0);this.debouncedUpdateExplorer=(0,l.debounce)(()=>{var t;return(t=this.explorerIntegration)==null?void 0:t.updateAllFileExplorerIcons()},150);this.debouncedUpdateStatusPane=(0,l.debounce)(()=>this.updateStatusPane(),200);this.hasShownErrorNotification=!1}async onload(){try{await this.loadSettings(),this.boundSaveSettings=this.saveSettings.bind(this),this.boundCheckNoteStatus=this.checkNoteStatus.bind(this),this.boundRefreshDropdown=()=>{var t;return(t=this.statusDropdown)==null?void 0:t.render()},this.boundRefreshUI=()=>this.checkNoteStatus(),this.registerIcons(),this.statusService=new x(this.app,this.settings),this.styleService=new y(this.settings),this.registerViews(),this.registerCommands(),this.addSettingTab(new D(this.app,this)),this.setupCustomEvents(),this.app.workspace.onLayoutReady(async()=>{await this.initializeUIComponents()})}catch(t){console.error("Error loading Note Status plugin:",t),new l.Notice("Error loading Note Status plugin. Check console for details.")}}async initializeUIComponents(){this.statusBar=new b(this.addStatusBarItem(),this.settings,this.statusService),this.statusDropdown=new F(this.app,this.settings,this.statusService),setTimeout(()=>{this.explorerIntegration=new k(this.app,this.settings,this.statusService),this.statusContextMenu=new I(this.app,this.settings,this.statusService,this.statusDropdown,this.explorerIntegration),this.registerMenuHandlers(),this.registerEvents(),this.checkNoteStatus();let t=this.app.workspace.getActiveFile();t&&this.settings.showStatusIconsInExplorer&&this.explorerIntegration.updateFileExplorerIcons(t),this.settings.showStatusIconsInExplorer&&setTimeout(()=>{this.explorerIntegration.updateAllFileExplorerIcons()},2e3)},300)}async initialize(){this.registerIcons(),this.initializeServices(),this.initializeUI(),this.registerViews(),this.registerCommands(),this.registerMenuHandlers(),this.registerEvents(),this.setupCustomEvents(),this.addSettingTab(new D(this.app,this)),this.app.workspace.onLayoutReady(async()=>{await this.onLayoutReady()})}async onLayoutReady(){await new Promise(t=>setTimeout(t,200)),this.checkNoteStatus(),this.statusDropdown.update(this.getCurrentStatuses()),this.explorerIntegration.updateAllFileExplorerIcons(),setTimeout(()=>{this.explorerIntegration.updateAllFileExplorerIcons()},2e3)}registerIcons(){Object.entries(R).forEach(([t,s])=>{let o=new DOMParser().parseFromString(s,"image/svg+xml").documentElement,r=new XMLSerializer().serializeToString(o);t==="statusPane"?(0,l.addIcon)("status-pane",r):(0,l.addIcon)(`note-status-${t}`,r)})}registerViews(){this.registerView("status-pane",t=>(this.statusPaneLeaf=t,new E(t,this))),this.addRibbonIcon("status-pane","Open status pane",()=>{this.openStatusPane()})}initializeServices(){this.statusService=new x(this.app,this.settings),this.styleService=new y(this.settings)}initializeUI(){this.statusBar=new b(this.addStatusBarItem(),this.settings,this.statusService),this.statusDropdown=new F(this.app,this.settings,this.statusService),this.explorerIntegration=new k(this.app,this.settings,this.statusService),this.statusContextMenu=new I(this.app,this.settings,this.statusService,this.statusDropdown,this.explorerIntegration)}setupCustomEvents(){window.addEventListener("note-status:settings-changed",this.boundSaveSettings),window.addEventListener("note-status:force-refresh",()=>{try{this.forceRefreshUI()}catch(t){console.error("Error handling force refresh event:",t)}}),window.addEventListener("note-status:status-changed",t=>{var s;try{let i=((s=t.detail)==null?void 0:s.statuses)||["unknown"];this.statusBar.update(i),this.statusDropdown.update(i);let n=this.app.workspace.getActiveFile();n&&this.explorerIntegration.updateFileExplorerIcons(n),setTimeout(()=>this.statusDropdown.render(),50)}catch(i){console.error("Error handling status change event:",i)}}),window.addEventListener("note-status:refresh-dropdown",this.boundRefreshDropdown),window.addEventListener("note-status:refresh-ui",this.boundRefreshUI)}registerCommands(){this.addCommand({id:"refresh-status",name:"Refresh status",callback:()=>{this.checkNoteStatus(),new l.Notice("Note status refreshed!")}}),this.addCommand({id:"force-refresh-ui",name:"Force refresh user interface",callback:()=>this.forceRefreshUI()}),this.addCommand({id:"insert-status-metadata",name:"Insert status metadata",editorCallback:(t,s)=>{this.statusService.insertStatusMetadataInEditor(t),new l.Notice("Status metadata inserted")}}),this.addCommand({id:"open-status-pane",name:"Open status pane",callback:()=>this.openStatusPane()}),this.addCommand({id:"add-status-to-note",name:"Add status to current note",callback:()=>this.showAddStatusToNoteMenu()})}showAddStatusToNoteMenu(){let t=this.app.workspace.getActiveFile();if(!t||t.extension!=="md"){new l.Notice("No markdown file is active");return}this.statusContextMenu.showForFile(t,new MouseEvent("click"))}registerMenuHandlers(){this.registerEvent(this.app.workspace.on("file-menu",(t,s,i)=>{i==="file-explorer-context-menu"&&s instanceof l.TFile&&s.extension==="md"&&t.addItem(n=>n.setTitle("Change status").setIcon("tag").onClick(()=>{let o=this.explorerIntegration.getSelectedFiles();o.length>1?this.statusContextMenu.showForFiles(o):this.statusContextMenu.showForFiles([s])}))})),this.registerEvent(this.app.workspace.on("files-menu",(t,s)=>{let i=[];for(let n of s)n instanceof l.TFile&&n.extension==="md"&&i.push(n);i.length>0&&t.addItem(n=>n.setTitle("Change status").setIcon("tag").onClick(()=>{this.statusContextMenu.showForFiles(i)}))})),this.registerEvent(this.app.workspace.on("editor-menu",(t,s,i)=>{i instanceof l.MarkdownView&&t.addItem(n=>n.setTitle("Change note status").setIcon("tag").onClick(()=>this.statusDropdown.showInContextMenu(s,i)))}))}registerEvents(){this.registerEvent(this.app.workspace.on("file-open",t=>{t instanceof l.TFile&&(this.statusDropdown.addToolbarButtonToActiveLeaf(),this.checkNoteStatus())})),this.registerEvent(this.app.workspace.on("editor-change",()=>{this.debouncedCheckNoteStatus()})),this.registerEvent(this.app.workspace.on("active-leaf-change",()=>{this.statusDropdown.addToolbarButtonToActiveLeaf(),this.checkNoteStatus()})),this.registerEvent(this.app.workspace.on("active-leaf-change",()=>{var s;let t=this.app.workspace.getActiveFile();((s=this.lastActiveFile)==null?void 0:s.path)!==(t==null?void 0:t.path)&&(this.lastActiveFile=t,this.statusDropdown.update(this.getCurrentStatuses()),this.debouncedUpdateStatusPane())})),this.registerFileEvents(),this.registerMetadataEvents(),this.registerEvent(this.app.workspace.on("layout-change",()=>{this.debouncedUpdateStatusPane()}))}registerFileEvents(){this.registerEvent(this.app.vault.on("modify",t=>{var s;t instanceof l.TFile&&t.extension==="md"&&(this.explorerIntegration.updateFileExplorerIcons(t),((s=this.app.workspace.getActiveFile())==null?void 0:s.path)===t.path&&(this.checkNoteStatus(),this.statusDropdown.update(this.getCurrentStatuses())),this.debouncedUpdateStatusPane())})),this.registerEvent(this.app.vault.on("create",t=>{t instanceof l.TFile&&t.extension==="md"&&(this.explorerIntegration.updateFileExplorerIcons(t),this.debouncedUpdateStatusPane())})),this.registerEvent(this.app.vault.on("delete",()=>{this.debouncedUpdateExplorer(),this.debouncedUpdateStatusPane()})),this.registerEvent(this.app.vault.on("rename",t=>{t instanceof l.TFile&&t.extension==="md"&&(this.explorerIntegration.updateAllFileExplorerIcons(),this.debouncedUpdateStatusPane())}))}registerMetadataEvents(){this.registerEvent(this.app.metadataCache.on("changed",t=>{var s;t instanceof l.TFile&&t.extension==="md"&&(this.explorerIntegration.updateFileExplorerIcons(t),((s=this.app.workspace.getActiveFile())==null?void 0:s.path)===t.path&&(this.checkNoteStatus(),this.statusDropdown.update(this.getCurrentStatuses())),this.debouncedUpdateStatusPane())})),this.registerEvent(this.app.metadataCache.on("resolved",()=>{setTimeout(()=>this.explorerIntegration.updateAllFileExplorerIcons(),500)}))}checkNoteStatus(){try{let t=this.app.workspace.getActiveFile();if(!t||!(t instanceof l.TFile)||t.extension!=="md"){this.statusBar.update(["unknown"]),this.statusDropdown.update(["unknown"]);return}let s=this.statusService.getFileStatuses(t);this.statusBar.update(s),this.statusDropdown.update(s)}catch(t){console.error("Error checking note status:",t),this.hasShownErrorNotification||(new l.Notice("Error checking note status. Check console for details."),this.hasShownErrorNotification=!0,setTimeout(()=>{this.hasShownErrorNotification=!1},1e4))}}getCurrentStatuses(){try{let t=this.app.workspace.getActiveFile();return!t||!(t instanceof l.TFile)||t.extension!=="md"?["unknown"]:this.statusService.getFileStatuses(t)}catch(t){return console.error("Error getting current statuses:",t),["unknown"]}}async openStatusPane(){try{let t=this.app.workspace.getLeavesOfType("status-pane")[0];if(t){this.app.workspace.setActiveLeaf(t);return}let s=this.app.workspace.getLeftLeaf(!1);s&&(await s.setViewState({type:"status-pane",active:!0}),this.statusPaneLeaf=s)}catch(t){console.error("Error opening status pane:",t),new l.Notice("Error opening status pane. Check console for details.")}}showStatusContextMenu(t){try{this.statusContextMenu.showForFiles(t)}catch(s){console.error("Error showing status context menu:",s),new l.Notice("Error showing status context menu. Check console for details.")}}async updateStatusPane(){var t;try{if(this.statusPaneLeaf&&this.statusPaneLeaf.view instanceof E){let s=((t=this.statusPaneLeaf.view.searchInput)==null?void 0:t.value.toLowerCase())||"";await this.statusPaneLeaf.view.renderGroups(s)}}catch(s){console.error("Error updating status pane:",s)}}async loadSettings(){try{let t=await this.loadData();this.settings=Object.assign({},$,t),this.initializeDefaultColors()}catch(t){console.error("Error loading settings:",t),new l.Notice("Error loading settings. Using defaults. Check console for details."),this.settings=Object.assign({},$),this.initializeDefaultColors()}}initializeDefaultColors(){for(let[t,s]of Object.entries(G))this.settings.statusColors[t]||(this.settings.statusColors[t]=s);this.initializeTemplateColors()}initializeTemplateColors(){if(!this.settings){console.error("Settings not initialized properly");return}if(!this.settings.useCustomStatusesOnly&&this.statusService){let t=this.statusService.getTemplateStatuses();for(let s of t)s.color&&!this.settings.statusColors[s.name]&&(this.settings.statusColors[s.name]=s.color)}}async saveSettings(){try{await this.saveData(this.settings),this.updateComponentSettings()}catch(t){console.error("Error saving settings:",t),new l.Notice("Error saving settings. Check console for details.")}}updateComponentSettings(){this.statusService.updateSettings(this.settings),this.styleService.updateSettings(this.settings),this.statusBar.updateSettings(this.settings),this.statusDropdown.updateSettings(this.settings),this.explorerIntegration.updateSettings(this.settings),this.statusContextMenu.updateSettings(this.settings),this.statusPaneLeaf&&this.statusPaneLeaf.view instanceof E&&this.statusPaneLeaf.view.updateSettings(this.settings)}forceRefreshUI(){try{this.debouncedCheckNoteStatus.cancel(),this.debouncedUpdateExplorer.cancel(),this.debouncedUpdateStatusPane.cancel(),this.checkNoteStatus(),this.explorerIntegration.updateAllFileExplorerIcons(),this.updateStatusPane(),new l.Notice("UI forcefully refreshed")}catch(t){console.error("Error force refreshing UI:",t),new l.Notice("Error refreshing UI. Check console for details.")}}onunload(){var s,i,n,o,a,r,u,d;this.debouncedCheckNoteStatus.cancel(),this.debouncedUpdateExplorer.cancel(),this.debouncedUpdateStatusPane.cancel(),(i=(s=this.statusBar).unload)==null||i.call(s),(o=(n=this.statusDropdown).unload)==null||o.call(n),(r=(a=this.explorerIntegration).unload)==null||r.call(a),(d=(u=this.styleService).unload)==null||d.call(u);let t=this.app.workspace.getLeavesOfType("status-pane")[0];t&&t.detach(),this.removeCustomEventListeners()}removeCustomEventListeners(){window.removeEventListener("note-status:settings-changed",this.boundSaveSettings),window.removeEventListener("note-status:status-changed",this.boundCheckNoteStatus),window.removeEventListener("note-status:refresh-dropdown",this.boundRefreshDropdown),window.removeEventListener("note-status:refresh-ui",this.boundRefreshUI)}};

/* nosourcemap */